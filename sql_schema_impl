create table merchants (
	merchant_id serial,
	name varchar(30),
	email varchar(30),
	phone varchar(20),
	password varchar(30),
	kaspi_login varchar(30),
	kaspi_password varchar(30),
	address_tab varchar(100),
	last_active timestamp with time zone,
	primary key (merchant_id),
	constraint uq_email unique (email),
	constraint uq_phone unique (phone),
	constraint uq_email_phone unique (email, phone)
);

create table order_table (
	merchant_id smallint not null,
	order_link varchar(200),
	min_price int,
	active boolean,
	cls smallint,
	primary key (merchant_id, order_link),
	constraint fk_users_merchant_id foreign key (merchant_id) references merchants (merchant_id)
);

create table order_fact (
	merchant_id smallint not null,
	order_link varchar(200),
	created_at timestamp with time zone DEFAULT now(),
	primary key (merchant_id, order_link),
	constraint fk_users_merchant_id foreign key (merchant_id) references merchants (merchant_id)
);

create table order_archive (
	merchant_id smallint not null,
	order_link varchar(200),
	created_at timestamp with time zone DEFAULT now(),
	primary key (merchant_id, order_link),
	constraint fk_users_merchant_id foreign key (merchant_id) references merchants (merchant_id)
);

create table order_status (
	merchant_id smallint not null,
	order_link varchar(200),
	ranking smallint,
	curr_price int,
	next_price int,
	min_price int,
	scanned_at timestamp with time zone DEFAULT now(),
	updated_at timestamp with time zone,
	primary key (merchant_id, order_link),
	constraint fk_users_merchant_id foreign key (merchant_id) references merchants (merchant_id)
);

create table scan_event (
	merchant_id smallint not null,
	order_link varchar(200),
	created_at timestamp with time zone default now(),
	sellers_links text,
	sellers_names text,
	sellers_prices text,
	constraint fk_users_merchant_id foreign key (merchant_id) references merchants (merchant_id)
);

create table logs (
	merchant_id smallint,
	created_at timestamp with time zone DEFAULT now(),
	order_link character varying(200),
	log_level character varying(20) NOT NULL,
	log_status smallint NOT NULL,
	log_text character varying(5000) NOT NULL
);

select count(*) from scan_event where created_at between now() - INTERVAL '10 HOUR' and now() and merchant_id = 2;

select avg(ranking) from order_status where merchant_id = 2;

